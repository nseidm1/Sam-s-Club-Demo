apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "com.noahseidman.walmartdemo"
        minSdkVersion 27
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    google()
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${variant.unitTestVariant.dirName}")
        variant.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.okhttp3:okhttp:4.0.1'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.google.dagger:dagger:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.airbnb.android:lottie:2.5.4'

    def androidxFragmentVersion = "1.2.0-alpha02"
    testImplementation 'com.google.dagger:dagger:2.24'
    kaptTest 'com.google.dagger:dagger-compiler:2.24'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'androidx.test:orchestrator:1.2.0'
    implementation 'androidx.test:core:1.2.0' // this is dumb, but it fixes the problem
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.robolectric:shadows-httpclient:3.0'
    testImplementation "org.mockito:mockito-core:2.28.2"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "com.github.donfuxx:Mockinizer:1.1.0"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.0.1"
    implementation "androidx.fragment:fragment-testing:$androidxFragmentVersion" //not ideal or recommended, but it makes testing work in a standard way

}
